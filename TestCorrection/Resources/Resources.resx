<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddUser" xml:space="preserve">
    <value>Adicionar Usuário</value>
  </data>
  <data name="Administration" xml:space="preserve">
    <value>Administração</value>
  </data>
  <data name="AlertInsertTAG" xml:space="preserve">
    <value>Os nomes são case-sensitive (ex.: Teste é diferente de TESTE):</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Voltar para lista</value>
  </data>
  <data name="ChooseYourLanguage" xml:space="preserve">
    <value>Selecione seu idioma</value>
  </data>
  <data name="Click" xml:space="preserve">
    <value>Clique</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Fechar</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Criar</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Data de Criação</value>
  </data>
  <data name="DateErrorMessage" xml:space="preserve">
    <value>O campo { 0 } está no formato incorreto.</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Excluir</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Descição</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Detalhes</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="EditTemplate" xml:space="preserve">
    <value>Editar Template</value>
  </data>
  <data name="EditTemplateOptin" xml:space="preserve">
    <value>Editar Template de Optin</value>
  </data>
  <data name="EmailErrorMessage" xml:space="preserve">
    <value>O campo { 0 } está no formato incorreto.</value>
  </data>
  <data name="ErrorCreatingSendingList" xml:space="preserve">
    <value>Já existe uma lista com este nome.</value>
  </data>
  <data name="ErrorCreatingTag" xml:space="preserve">
    <value>Esta tag já está cadastrada.</value>
  </data>
  <data name="ErrorCreatingTemplate" xml:space="preserve">
    <value>A sequência é inválida. Somente números maiores ou iguais a 0.</value>
  </data>
  <data name="ErrorLoadingContent" xml:space="preserve">
    <value>ERRO AO CARREGAR O CONTEÚDO.</value>
  </data>
  <data name="ErrorReadingBounces" xml:space="preserve">
    <value>Erros lendo bounces</value>
  </data>
  <data name="ErrorRecipientRequired" xml:space="preserve">
    <value>Destinatário é obrigatório.</value>
  </data>
  <data name="ErrorSendingEmailWithSequence" xml:space="preserve">
    <value>Erro no envio de e-mail com a sequência { 0 }.</value>
  </data>
  <data name="ErrorUserNotExists" xml:space="preserve">
    <value>Usuário inexistente.</value>
  </data>
  <data name="Errror" xml:space="preserve">
    <value>Erro</value>
  </data>
  <data name="Execute" xml:space="preserve">
    <value>Executar</value>
  </data>
  <data name="Form" xml:space="preserve">
    <value>Formulário</value>
  </data>
  <data name="FormatDateErrorMessage" xml:space="preserve">
    <value>O campo { 0 } precisa estar no formato dd/mm/aaaa e ser uma data válida.</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>Lista</value>
  </data>
  <data name="ListDetails" xml:space="preserve">
    <value>Detalhes da Lista</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Carregando</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Sair</value>
  </data>
  <data name="Marks" xml:space="preserve">
    <value>Marcações</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Novo</value>
  </data>
  <data name="NewTemplate" xml:space="preserve">
    <value>Novo Template</value>
  </data>
  <data name="NewTemplateOptin" xml:space="preserve">
    <value>Novo Template de Optin</value>
  </data>
  <data name="NoAccess" xml:space="preserve">
    <value>Sem Acesso</value>
  </data>
  <data name="NoDataToShow" xml:space="preserve">
    <value>Nenhum dado a ser exibido</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>de</value>
  </data>
  <data name="OptinLink" xml:space="preserve">
    <value>link de optin</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Página</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Senha</value>
  </data>
  <data name="Read" xml:space="preserve">
    <value>Ler</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>atualizar</value>
  </data>
  <data name="RegexErrorMessage" xml:space="preserve">
    <value>O campo { 0 } está no formato incorreto.</value>
  </data>
  <data name="RegisterRemovedWithSuccess" xml:space="preserve">
    <value>Seu registro foi removido com sucesso.</value>
  </data>
  <data name="RequiredErrorMessage" xml:space="preserve">
    <value>O campo { 0 } é obrigatório.</value>
  </data>
  <data name="RequiredFields" xml:space="preserve">
    <value>Campos obrigatórios</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Resultado</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Salvar</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Procurar</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>-- selecione --</value>
  </data>
  <data name="SelectAItem" xml:space="preserve">
    <value>Selecione um item</value>
  </data>
  <data name="SelectAList" xml:space="preserve">
    <value>-- selecione uma lista --</value>
  </data>
  <data name="Sending" xml:space="preserve">
    <value>Envio</value>
  </data>
  <data name="SendingList" xml:space="preserve">
    <value>Lista de Envios</value>
  </data>
  <data name="Sendings" xml:space="preserve">
    <value>Envios</value>
  </data>
  <data name="Sendings_log" xml:space="preserve">
    <value>LOG de envios</value>
  </data>
  <data name="SessionExpired" xml:space="preserve">
    <value>Sua sessão expirou.</value>
  </data>
  <data name="ShowAll" xml:space="preserve">
    <value>Exibir todos</value>
  </data>
  <data name="ShowTemplate" xml:space="preserve">
    <value>VerTemplate</value>
  </data>
  <data name="ShowYourCredential" xml:space="preserve">
    <value>Exiba suas credenciais</value>
  </data>
  <data name="TagsAreShowedOnFocus" xml:space="preserve">
    <value>ao colocar o focus, exibe as tags disponíveis</value>
  </data>
  <data name="Templates" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="TestSending" xml:space="preserve">
    <value>Testar envio</value>
  </data>
  <data name="Trigram" xml:space="preserve">
    <value>Trigrama</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Usuário</value>
  </data>
  <data name="UserEntry" xml:space="preserve">
    <value>Entrada de Usuário</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>nome do usuário</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Usuários</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Bem-vindo &lt;b&gt; { 0 }&lt;/b&gt;, você está logado como &lt;b&gt; { 1 }&lt;/b&gt;</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Trocar Senha</value>
  </data>
  <data name="CreateANewAccountSuccess" xml:space="preserve">
    <value>Uma nova conta foi criada com sucesso.</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Novo usuário</value>
  </data>
  <data name="TagExplanation" xml:space="preserve">
    <value>Insira as tags separando por espaço. As tags só podem ser minúsculas. Não é permitido tags duplicadas. As tags não podem conter espaços.</value>
  </data>
  <data name="LoginError" xml:space="preserve">
    <value>Login Usuário e/ou senha incorretos</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>Auto Responder</value>
  </data>
  <data name="PasswordChangeSucces" xml:space="preserve">
    <value>Senha alterada com sucesso.</value>
  </data>
  <data name="PasswordNotMatchError" xml:space="preserve">
    <value>Senhas não combinam.</value>
  </data>
  <data name="StringLengthErrorMessage" xml:space="preserve">
    <value>O { 0 } deve ter ao menos { 2 } e no máximo { 1 } caracteres.</value>
  </data>
  <data name="UserNameIsAlreadyUsedError" xml:space="preserve">
    <value>Trigrama já está em uso.</value>
  </data>
  <data name="BackToLogin" xml:space="preserve">
    <value>Voltar para o Login</value>
  </data>
</root>